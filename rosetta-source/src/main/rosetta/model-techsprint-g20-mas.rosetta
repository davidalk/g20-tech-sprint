namespace cdm.techsprint.g20.mas

import org.isda.cdm.*
import cdm.base.*
import cdm.base.math.*
import cdm.base.datetime.*
import cdm.base.staticdata.identifier.*
import cdm.base.staticdata.asset.rates.*
import cdm.base.staticdata.asset.credit.*
import cdm.base.staticdata.asset.common.*
import cdm.base.staticdata.party.*

// https://www.mas.gov.sg/
body Authority MAS <"The Monetary Authority of Singapore (MAS) is Singapore’s central bank and integrated financial regulator. MAS also works with the financial industry to develop Singapore as a dynamic international financial centre.">

// https://sso.agc.gov.sg/Act/SFA2001
corpus Act "289" SFA <"The Securities And Futures Act relates to the regulation of activities and institutions in the securities and derivatives industry, including leveraged foreign exchange trading, of financial benchmarks and of clearing facilities, and for matters connected therewith.">

// https://sso.agc.gov.sg/SL/SFA2001-S668-2013
corpus Regulations "SFA2001-S668-2013" MAS_2013 <"The Securities And Futures (Reporting Of Derivatives Contracts) Regulations 2013 contain Regulations setting out reporting requirements for OTC counterparties for OTC derivatives.">

corpus FAQ "13May2020|FAQ" FAQ <"These FAQs are to aid implementation of the reporting obligations and elaborate on MAS’ intent for some of the requirements set out under the SF(RDC)R.">

report MAS SFA MAS_2013 in T+2
when BookedInSingapore
with fields 
    UniqueTransactionIdentifier
    UniqueProductIdentifier
    Counterparty1
    Counterparty2
    ReportingEntity
    Cleared
    EffectiveDate
    TerminationDate
    ReportingTimestamp
    OptionType
    OptionExpirationDate
    OptionPremium
    InterestRateNotionalAmountLeg1

eligibility rule BookedInSingapore
    // Dummy Rule
     filter when WorkflowStep -> eventIdentifier  exists

reporting rule ContractForEvent
 	extract
 		if WorkflowStep -> businessEvent -> primitives -> contractFormation -> after -> contract only exists
	then WorkflowStep -> businessEvent -> primitives -> contractFormation -> after -> contract
	else if WorkflowStep -> businessEvent -> primitives -> quantityChange -> after -> contract  exists
		then WorkflowStep -> businessEvent -> primitives -> quantityChange -> after -> contract
		else WorkflowStep -> businessEvent -> primitives -> contractFormation -> after -> contract
 	as "Contract"

reporting rule IsInterestRatePayout
    ContractForEvent then
    extract Contract -> tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> interestRatePayout only exists

reporting rule IsCreditDefaultPayout
    ContractForEvent then
    extract Contract -> tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout exists
     
reporting rule UniqueTransactionIdentifier <"Unique transaction identifier (UTI)">
    [regulatoryReference MAS SFA MAS_2013 annex "1" table "I" field "1.1"
    provision "An identifier to denote the transaction. For an uncleared contract that is not electronically confirmed, the specified person must report a UTI to be agreed on with the counterparty to the contract or a UTI that is internally generated. For all other contracts, the specified person must report the UTI to be agreed on with the counterparty to the contract. Field value: Alphanumeric string."]
    extract WorkflowStep -> eventIdentifier -> assignedIdentifier -> identifier as "I.1.1 UTI"

reporting rule UniqueProductIdentifier <"Unique product identifier (UPI)">
    [regulatoryReference MAS SFA MAS_2013 annex "1" table "I" field "1.2"
    provision "An identifier to denote the product type (e.g. ISDA product taxonomy).  Field value: Alphanumeric string."]
	ContractForEvent then
		extract Contract -> tradableProduct -> product -> contractualProduct -> productIdentification -> productQualifier as "I.1.2 UPI"

reporting rule Counterparty1 <"Identifier of reporting entity">
    [regulatoryReference MAS SFA MAS_2013 annex "1" table "I" field "2.1"
    provision "An identifier of counterparty 1. Where counterparty 1 is a specified person, to use LEI or pre‑LEI if LEI is not available. Where counterparty 1 is not a specified person, to use LEI or pre‑LEI if LEI is not available or, if counterparty 1 does not have any LEI or pre‑LEI, to use SWIFT BIC code, AVOX ID, any identifier issued by a licensed trade repository or licensed foreign trade repository, or client code. In the case of individuals, to use a client code. Field value: Alphanumeric string."]
	ContractForEvent then
	extract Contract -> partyContractInformation then
		filter when PartyContractInformation -> relatedParty -> role = PartyRoleEnum -> ReportingParty then
			extract PartyContractInformation -> partyReference -> partyId as "I.2.1 Counterparty2"

reporting rule Counterparty2 <"Identifier of reporting entity">
    [regulatoryReference MAS SFA MAS_2013 annex "1" table "I" field "2.2"
    provision "An identifier of counterparty 2. Where counterparty 2 is a specified person, to use LEI or pre‑LEI if LEI is not available. Where counterparty 2 is not a specified person, to use LEI or pre‑LEI if LEI is not available or, if counterparty 2 does not have any LEI or pre‑LEI, to use SWIFT BIC code, AVOX ID, any identifier issued by a licensed trade repository or licensed foreign trade repository, or client code. In the case of individuals, to use a client code. Field value: Alphanumeric string."]
	ContractForEvent then
	extract Contract -> partyContractInformation then
		filter when PartyContractInformation -> relatedParty -> role = PartyRoleEnum -> ReportingParty then
			extract PartyContractInformation -> partyReference -> partyId as "I.2.2 Counterparty 2"

reporting rule ReportingEntity <"Identifier of reporting entity">
    [regulatoryReference MAS SFA MAS_2013 annex "1" table "I" field "2.3"
    provision "To denote the identity of the reporting entity.  To use LEI or pre‑LEI if LEI is not available.  Field value: Alphanumeric string."]
	ContractForEvent then
	extract Contract -> partyContractInformation then
		filter when PartyContractInformation -> relatedParty -> role = PartyRoleEnum -> ReportingParty then
			extract PartyContractInformation -> partyReference -> partyId as "I.2.3 Reporting Counterparty ID"

reporting rule Cleared <"Whether the contract has been cleared">
    [regulatoryReference MAS SFA MAS_2013 annex "1" table "I" field "3.1"
    provision "To denote if the contract has been cleared. Field value: “True” or “False”."]
        extract if WorkflowStep -> businessEvent -> eventQualifier = "ClearedTrade" then "True"
            else if WorkflowStep -> businessEvent -> eventQualifier <> "ClearedTrade" then "False"
            else "" as "I.3.1 Cleared"

//only works for InterestRate, Credit Default
reporting rule EffectiveDate <"Effective date or start date of contract">
    [regulatoryReference MAS SFA MAS_2013 annex "1" table "I" field "4.1"
    provision "The date under which the obligations under the contract come into effect.  Field value: ISO 8601 date format, UTC time."]
    ContractForEvent then
    extract multiple
    if Contract -> tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> interestRatePayout only exists
    then Contract -> tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> interestRatePayout -> calculationPeriodDates -> effectiveDate -> adjustableDate -> unadjustedDate
    else if Contract -> tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout exists
    then Contract -> tradableProduct -> product -> contractualProduct -> economicTerms -> effectiveDate -> adjustableDate -> unadjustedDate
    else Contract -> tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> interestRatePayout -> calculationPeriodDates -> effectiveDate -> adjustableDate -> unadjustedDate as "I.4.1 Effective Date"

//only works for InterestRate, Credit Default
reporting rule TerminationDate <"Maturity, termination or end date of contract">
    [regulatoryReference MAS SFA MAS_2013 annex "1" table "I" field "4.2"
    provision "The date of expiry of the contract.  Field value: ISO 8601 date format, UTC time."]
    ContractForEvent then
    extract multiple
    if Contract -> tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> interestRatePayout only exists
    then Contract -> tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> interestRatePayout -> calculationPeriodDates -> terminationDate -> adjustableDate -> unadjustedDate
    else if Contract -> tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout exists
    then Contract -> tradableProduct -> product -> contractualProduct -> economicTerms -> terminationDate -> adjustableDate -> unadjustedDate
    else Contract -> tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> interestRatePayout -> calculationPeriodDates -> terminationDate -> adjustableDate -> unadjustedDate as "I.4.1 Termination Date"

//validation required that timestamp has event creation enum representing time that the reporting workflowstep was created.
reporting rule ReportingTimestamp <"Reporting timestamp">
    [regulatoryReference MAS SFA MAS_2013 annex "1" table "I" field "5"
    provision "The date and time when the contract was reported to a LTR or LFTR.  Field value: ISO 8601 date format, UTC time."]
    extract WorkflowStep -> timestamp -> dateTime as "I.5 Reporting Timestamp"

reporting rule OptionType <"Option Type">
    [regulatoryReference MAS SFA MAS_2013 annex "1" table "I" field "6.1"
    provision "To denote the type of option. Field value: “Call” or “Put”."]
    return "N/A" as "I.6.1 Option Type"

reporting rule OptionExpirationDate <"Option expiration date">
    [regulatoryReference MAS SFA MAS_2013 annex "1" table "I" field "6.2"
    provision "The expiry date of the option. Field value: ISO 8601 date format, UTC time."]
    return "N/A" as "I.6.2 Option Expiration Date"

reporting rule OptionPremium <"Option premium">
    [regulatoryReference MAS SFA MAS_2013 annex "1" table "I" field "6.3"
    provision "The amount of option premium paid by the buyer to the seller for the reported contract. Field value: Any valid number."]
    return "N/A" as "I.6.3 Option Premium"

//how to associate the right quantity/price/currency with the right leg?
reporting rule InterestRateNotionalAmountLeg1 <"Notional amount for leg 1">
    [regulatoryReference MAS SFA MAS_2013 annex "1" table "II" field "1.1"
    provision "The notional amount of leg 1 of the contract. Field value: Any valid number."]
    filter when rule IsInterestRatePayout then
    ContractForEvent then
    extract Contract -> tradableProduct -> quantityNotation -> quantity as "II.5 Notional amount leg 1"

//how to associate the right quantity/price/currency with the right leg?
reporting rule InterestRateNotionalCurrencyLeg1 <"Notional currency for leg 1">
    [regulatoryReference MAS SFA MAS_2013 annex "1" table "II" field "1.2"
    provision "The notional currency of leg 1 of the contract. Field value: Any valid number."]
    filter when rule IsInterestRatePayout then
    ContractForEvent then
    extract multiple Contract -> tradableProduct -> quantityNotation -> quantity as "II.5 Notional currency leg 1"